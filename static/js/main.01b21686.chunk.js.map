{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/todo-item/todo-item.js","components/todo-list/todo-list.js","components/item-status/item-status.js","components/item-add-form/item-add-fotm.js","components/app/App.js","index.js"],"names":["TodoHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","React","Component","TodoItems","name","onDeleted","onToggleImportantsf","onToggleDonesf","classNames","important","onClick","TodoList","todos","onDeleteds","onToggleImportants","onToggleDones","elements","map","item","id","itemProps","key","ItemStatus","buttons","filter","filters","onFilterChange","clazz","ItemAddForm","onNameChenge","onSubmit","preventDefault","onItemAdd","App","maxId","todoData","createItem","deleteItem","idx","findIndex","el","slice","onAddItem","text","newItem","onToggleDone","toggleProperty","onToggleImportant","onSearch","arr","propName","oldItem","items","length","toLowerCase","indexOf","doneCount","todoCount","visibleItems","search","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01b21686.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./app-header.css\"\n\nconst TodoHeader = ({toDo, done})=> {\n    return (\n        <div className=\"app-header d-flex\">\n            <h1>ToDo List</h1>\n            <h2>{toDo} more to,{done} done </h2>\n        </div>\n    )\n  }\n  export default TodoHeader;","import React from \"react\";\nimport \"./search-panel.css\"\n\nclass SearchPanel extends React.Component {\n  \n  state={\n    term: \"\"\n  }\n\n  onSearchChange = (e)=> {\n    const term=e.target.value\n    this.setState ({\n      term\n    })\n    this.props.onSearchChange(term)\n  }\n\n  render () {\n    return (\n      <input\n        type=\"text\" \n        placeholder=\"search\"\n        className=\"form-control search-input\"\n        value={this.state.term}\n        onChange={this.onSearchChange}>\n    </input>\n    )\n  }\n}\n\nexport default SearchPanel;  ","import React from 'react';\nimport \"./todo-item.css\"\n\nclass TodoItems extends React.Component {\n\n\n  render(){\n\n    const {name, onDeleted, onToggleImportantsf, onToggleDonesf, done, important} = this.props;\n\n    let classNames = \"todo-item\";\n    if (done) {\n      classNames += ' done'; // space before done\n    }\n    if (important) {\n      classNames += ' important'\n    }\n\n    return (\n      <span className={classNames}>\n        <span\n          className=\"todo-item-name\"\n          onClick={onToggleDonesf}>\n          {name}\n        </span>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-success btn-sm float-right\"\n                onClick={onToggleImportantsf}>\n          <i className=\"fa fa-exclamation\" />\n        </button>\n  \n        <button type=\"button\"\n                className=\"btn btn-outline-danger btn-sm float-right\"\n                onClick={onDeleted}>\n          <i className=\"fa fa-trash-o\" />\n        </button>\n      </span>\n    );\n\n  }\n}\nexport default TodoItems;","import React from \"react\";\nimport \"./todo-list.css\"\nimport TodoItems from '../todo-item/todo-item'\n\nconst TodoList = ({todos, onDeleteds, onToggleImportants, onToggleDones})=> {\n\n    const elements= todos.map((item)=>{\n\n        const { id, ...itemProps} = item // all propeties but no id, in itemProps  \n\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoItems \n                {...itemProps}\n                onDeleted={()=> onDeleteds(id)}\n                onToggleImportantsf={()=>onToggleImportants(id)}\n                onToggleDonesf={()=>onToggleDones(id)}/>\n            </li>\n    )\n    } )\n\n    return (\n            <ul className=\"list-group todo-list\">\n                {elements}\n            </ul>\n    )\n  }\n\n  export default TodoList;","import React from \"react\";\n\nclass ItemStatus extends React.Component {\n\n        buttons = [\n                {filter:\"all\" , name: \"All\"},\n                {filter:\"active\" , name: \"Active\"},\n                {filter:\"done\" , name: \"Done\"}\n        ];\n\n\n        render(){\n                const {filters,onFilterChange} = this.props;\n\n                const buttons=this.buttons.map(({filter, name}) => {\n                        const isActive = filters === filter;\n                        const clazz = isActive ? \"btn-info\" : \"btn-outline-secondary\";\n                        return (\n                                <button\n                                        type=\"button\"\n                                        className={`btn ${clazz}`}\n                                        key={filter}\n                                        onClick={()=>onFilterChange(filter)}>\n                                {name}\n                                </button>\n                        )\n                })\n\n                return (\n                        <div className=\"btn-group\">\n                               {buttons}\n                        </div> \n                )\n        }\n}\n\nexport default ItemStatus;","import React from \"react\";\nimport \"./item-add-form.css\"\n\nclass ItemAddForm extends React.Component {\n\n    state = {\n        name: \"\"\n    }\n\n    onNameChenge = (e) => {\n        this.setState({\n            name: e.target.value\n        })\n    }\n\n    onSubmit = (e)=>{\n        e.preventDefault(); // когда этот евент будет обраб, то действие по умол не нужно ( перезагрузка )\n        this.props.onItemAdd(this.state.name)\n        this.setState({\n            name:\"\"\n        })\n    }\n\n    render(){\n        return(\n            <form\n                className=\"item-add-form d-flex\"\n                onSubmit={this.onSubmit}>\n                \n                <input \n                    type=\"text\"\n                    placeholder =\" add new todo item\"\n                    className=\"form-control\"\n                    onChange={this.onNameChenge}\n                    value={this.state.name}></input>\n                <button\n                className = 'btn btn-outline-secondary'\n                >\n                    Add Item\n                </button>\n            </form>\n        )\n    }\n}\n\nexport default ItemAddForm","import React from 'react';\nimport TodoHeader from '../app-header/app-header'\nimport SearchPanel from '../search-panel/search-panel'\nimport TodoList from '../todo-list/todo-list'\nimport ItemStatus from \"../item-status/item-status\"\nimport \"./app.css\"\nimport ItemAddForm from \"../item-add-form/item-add-fotm\"\n\nclass App extends React.Component {\n\n  maxId=100;\n\n  state={\n      todoData: [\n        this.createItem('drink coffe'),\n        this.createItem(\"Drink milk\"),\n        this.createItem(\"Drink alcohol\")\n      ],\n      term: '', // search panel state\n      filter: \"done\" // active, all, done\n  }\n\n  createItem(name) {\n    return {\n      name,\n      important: false,\n      done:false,\n      id: this.maxId++\n\n    }\n  }\n\n  deleteItem = (id) => {\n    this.setState(({todoData})=> {\n\n      const idx = todoData.findIndex((el)=> el.id === id)\n\n      //[a,,b,c,d,e]\n      //[a,b, d,e]\n\n      const newArray = [\n        ...todoData.slice(0, idx), \n        ...todoData.slice(idx + 1)];\n\n      return {\n        todoData: newArray\n      };\n\n    })\n  }\n\n  onAddItem = (text) => { // add new item method\n    const newItem = this.createItem(text)\n\n    // add element in array\n    this.setState(({todoData})=> {\n      const newArr = [ // данный массив состоит \n        ...todoData, // из всех старых \n        newItem // и нового айтема \n      ];\n      \n      return {\n        todoData: newArr // return new Arr \n      };\n    });\n  };\n\n  toggleProperty (arr, id, propName) {\n    const idx = arr.findIndex((el)=> el.id === id)\n\n      //1. update object\n      const oldItem=arr[idx];\n      const newItem = {...oldItem, \n                      [propName]: !oldItem.propName }\n      \n      //2. construct new array\n      return [\n        ...arr.slice(0, idx), \n        newItem,\n        ...arr.slice(idx + 1)];\n  }\n\n  onToggleDone = (id) => {\n    this.setState(({todoData})=>{\n        return {\n          todoData: this.toggleProperty(todoData, id, 'done')\n        }\n    })\n  }\n\n  onToggleImportant = (id) => {\n    this.setState(({todoData})=>{\n      return {\n        todoData: this.toggleProperty(todoData, id, 'important')\n      }\n  })\n  }\n  \n  search(items, term) {\n    if(term.length ===0){\n      return items;\n    }\n\n    return items.filter ((item) => {\n      return item.name\n        .toLowerCase().indexOf(term.toLowerCase()) > -1;\n    })\n  }\n\n  onSearch = (term)=> {\n    this.setState({term})\n  }\n\n  filter (items, filter) {\n    switch (filter) {\n      case 'all' :\n        return items;\n      case \"active\":\n        return items.filter((item)=> !item.done);\n      case \"done\": \n        return items.filter((item)=> item.done);\n      \n      default:   \n        return items;\n    }\n  }\n\n  onFilterChange = (filter)=> {\n    this.setState({filter})\n  }\n\n\n  render (){\n    \n    const {todoData, term, filter} =this.state\n\n    // done items \n    const doneCount = todoData\n                      .filter((el)=>el.done).length;\n\n    const todoCount = todoData.length - doneCount;\n\n    const visibleItems=this.filter(\n          this.search(todoData, term), filter)\n\n  return (\n    <div  className=\"todo-app\">\n      <TodoHeader toDo={todoCount} done={doneCount}/>\n    <div className=\"top-panel d-flex\">\n      <SearchPanel\n        onSearchChange={this.onSearch}/>\n      <ItemStatus\n        filters={filter}\n        onFilterChange={this.onFilterChange}/>\n    </div>\n    <TodoList\n      todos={visibleItems}\n      onDeleteds={this.deleteItem}\n      onToggleImportants={this.onToggleImportant}\n      onToggleDones={this.onToggleDone}/>\n\n      <ItemAddForm onItemAdd={this.onAddItem}/>\n  </div>\n  )\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}